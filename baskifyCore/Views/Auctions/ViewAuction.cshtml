@model baskifyCore.ViewModels.UserAuctionViewModel
@{
    ViewData["Title"] = Model.AuctionModel.Title;
    var disablePurchase = Model.UserModel.UserRole != Roles.USER; //stops non-logged/companies
}

    
    <style>
        .basketCardImages .galleria-bar{
            display: none;
        }
    </style>
    <script src="https://js.stripe.com/v3/"></script>
    <script src="~/galleria/galleria.min.js"></script>
    <div id="paymentSucceedAlert2" class="alert alert-dismissible alert-success" style="display:none;">
        <button type="button" class="close" data-dismiss="alert">&times;</button>
        Payment succeeded! You may now use your tickets!
    </div>
    <div id="AuctionBody" style="display:flex; flex-wrap:wrap; justify-content:center" class="maxWidthContainer">
        @if (!disablePurchase)
        {
        <div id="purchaseTicketsButton" style="cursor:pointer; position:fixed; right:10px; bottom:10px; z-index: 999999">
            <img src="~/Content/ticketIcon.png" style="height:94px" />
            <div style="font-size:150%; font-weight: bold; position: absolute; text-align:center; top: 50%;left: 50%;transform: translate(-50%, -50%);">
                @if (Model.Wallet.WalletBalance == 0)
                {
                    <text>Purchase Tickets</text>
                }
                else
                {
                    <text><span>@Model.Wallet.WalletBalance</span> Tickets</text>
                }
            </div>
            <div class="arrow" style="font-size: 450%;font-weight: bold;position: absolute;text-align:center;top: 50%;left: 13px;transform: translateY(-50%); opacity: 0">&larr;</div>
        </div>
        }

        <img src="@Model.AuctionModel.BannerImageUrl" style="width: 100%; height: auto;" />
        <div style="padding-left:10px;margin-top: 10px; margin-bottom: 10px; width: 100%">
            <h2>@Model.AuctionModel.Title</h2>
            <div class="text-muted" style="display: flex; width: 100%; justify-content: inherit">
                <span>@Model.AuctionModel.StartTime - @Model.AuctionModel.EndTime</span>
            </div>
            <div style="max-width: 100%;">
                @Model.AuctionModel.Description
            </div>
            <hr class="my-4">
        </div>
        <div id="basketContainer" style="display:flex; flex-wrap:wrap; justify-content:space-evenly">

        </div>
    </div>

    <div class="modal" id="basketDataModal">
        <div class="modal-dialog" id="BasketModalContainer" role="document">
            <div class="modal-content" id="basketModalContent">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalHeader"></h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body" id="basketModalBody">
                    <div class="galleria" style="height:400px" id="currentBasketGallery"></div>
                    <h2 id="currentBasketTitle" style="margin-top:10px;"></h2>
                    <div class="modalHeader">Description</div>
                    <div id="currentBasketDescription" style="margin-bottom:10px;"></div>
                    <div class="modalHeader">Basket Contents</div>
                    <table class="table table-hover" id="currentBasketContents">
                        <tbody style="display:flex; flex-wrap:wrap; justify-content:center">
                        </tbody>
                    </table>
                </div>
                <div class="modal-footer">
                    @if (!disablePurchase)
                    {
                    <button class="btn btn-success" id="currentBasketAddTicket" style="flex: 1;">Add Ticket (<span>0</span>)</button>
                    }
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>

    <div class="modal" id="purchaseTicketsModal">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalHeader">Purchase Tickets</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <form id="payment-form">
                    <div class="modal-body" id="ticketModalBody">
                        <div id="paymentFailedAlert" class="alert alert-dismissible alert-danger" style="display:none;">
                            <span>Woops! There's been an error! Try again!</span>
                        </div>
                        <div id="paymentSucceedAlert" class="alert alert-dismissible alert-success" style="display:none;">
                            Payment succeeded!
                        </div>


                        <label for="numTickets">Number of Tickets</label>
                        <input type="number" class="form-control" id="numTickets" min="@Math.Ceiling(0.5/Model.AuctionModel.TicketCost)" max="1000" value="@Math.Ceiling(0.5/Model.AuctionModel.TicketCost)"/>
                        <div id="card-element" style="padding: 10px 0px 0px 10px;">
                            <!-- Elements will create input elements here -->
                        </div>

                        <!-- We'll put the error messages in this element -->
                        <div id="card-errors" role="alert"></div>

                    </div>
                    <div class="modal-footer" style="flex-wrap:nowrap;">
                        <button style="font-size:150%; width: 100%;" class="btn btn-success" id="buyTickets">
                            Pay $<span>@decimal.Round((decimal)(Math.Ceiling(0.5 / Model.AuctionModel.TicketCost) * Model.AuctionModel.TicketCost), 2)</span>
                        </button>
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                </form>
            </div>
        </div>
    </div>


    <script>
    var ticketOut = true;
    var currentSelectedBasketId = -1;
    var errorMessage = null;
    var clientSecret = null;


        $(document).ajaxError(function (event, jqxhr, settings, thrownError) {
            if (jqxhr.status == 401) { //unauthorized due to bad login
                openSignOnModal();
            }
        });

    $(function () {
        Galleria.loadTheme('/galleria/themes/twelve/galleria.twelve.js');
        Galleria.configure({
            imageCrop: true,
            lightbox: true,
            transition: 'fade',
            idleMode: false
        });
    }()); //loads galleria

        $(document).on("mouseenter", ".galleria-stage", loadGallery);

    function toggleTicket(){
        if (ticketOut) {
            $("#purchaseTicketsButton").animate({ right: "-143px" }, 500, function () {
                $("#purchaseTicketsButton .arrow").animate({ opacity: "1" }, 200);
            });
            ticketOut = false;
        }
        else { //entend out
            $("#purchaseTicketsButton .arrow").animate({ opacity: "0" }, 200, function () {
                $("#purchaseTicketsButton").animate({ right: "10px" }, 500);
            });
            ticketOut = true;
        }
    }

        $("#purchaseTicketsButton").click(function () { //what happens when you click purchase ticket button
            if (!ticketOut) //if hidden, pop out
                toggleTicket();
            else
                $("#purchaseTicketsModal").modal("show");
        });

        $(document).scroll(function () {
            if (ticketOut)
                toggleTicket();
        });

    function loadGallery(e) {
        var card = $(e.currentTarget);
        if (card.attr("data-loaded") == "false") {
            var basketId = card.attr("data-id");
            $.ajax({
                url: "/api/baskets/" + basketId + "/images",
                success: function (result) {
                    var galleria = card.find(".galleria").data('galleria');
                    result.forEach(function (element, i) {
                        if (i != 0) //don't worry about the first element, it's already there
                            galleria.push({ image: element });
                    });
                    card.attr("data-loaded", "true");
                    card.off("mouseenter", loadGallery); //remove handler
                }
            });
        }
    }

        var elements;
        var baskets = []; //contains all baskets
        $(function () {
            $.ajax( //load in all of the baskets
                {
                    url: "/api/auctions/@Model.AuctionModel.AuctionId/baskets",
                    method: "GET",
                    beforeSend: function (xhr) { //add token
                        var token = getCookie("BearerToken");
                        if (token != "")
                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                    },
                    success: function (result) {
                        var container = $("#basketContainer");
                        container.html(""); //clear
                        baskets = result;
                        result.forEach(function (basket) {
                            var html =
                            `<div class="card mb-3 basketCard" style="border-radius: 30px" data-id="` + basket["basketId"] + `" data-loaded="false">\
                                <h3 class="card-header" style="font-size:114%">`+ basket["basketTitle"] + `(<span class="text-muted">` + basket["numTickets"] + `</span>)</h3>\
                                <div id="gallery-`+ basket["basketId"] + `" class="galleria basketCardImages" style="z-index:1;background-color:rgba(0, 0, 0, 0.00); height:300px; width:inherit">\
                                    <img src="`+ basket["photos"][0]["url"] + `" />\
                                </div>\
                                <div style="display:flex; margin-top:-30px; z-index:2">`;
                            @if (!disablePurchase)
                            {
                                <text>
                                html += `<button class="addTicket btn btn-primary" onclick="addTicket(` + basket["basketId"] + `)" style="flex:1;">Add Ticket</button>`;
                                </text>
                            }
                            html += `<button class="btn btn-primary" style="flex:1;" onclick="viewBasket(` + basket["basketId"] + `)">View Basket</button>\
                                </div>\
                            </div>`
                            container.append(html);
                        });

                        Galleria.run('.galleria');

                    }
                }
            );
        var stripe = Stripe('@ViewData["StripePublicKey"]');
        elements = stripe.elements();
        // Set up Stripe.js and Elements to use in checkout form
        var style = {
            base: {
                color: "#32325d",
            }
        };

        var card = elements.create("card", { style: style });
        card.mount("#card-element");

        $("#card-element").on('change', function (event) {
            var displayError = document.getElementById('card-errors');
            if (event.error) {
                displayError.textContent = event.error.message;
            } else {
                displayError.textContent = '';
            }
        });

        var form = document.getElementById('payment-form'); //swipe form

        $(form).on('submit', function (ev) {
            ev.preventDefault();
            $("#PageLoadingModal").css("display", "flex");
            $("#buyTickets").attr("disabled", "");
            $.ajax({
                url: "/api/wallets/@Model.AuctionModel.AuctionId/getsecret",
                method: "POST",
                data: {
                    tickets: $("#numTickets").val()
                },
                beforeSend: function (xhr) {
                    var token = getCookie("BearerToken");
                    if (token != "")
                        xhr.setRequestHeader("Authorization", "Bearer " + token);
                },
                success: function (data) {
                    stripe.confirmCardPayment(data, {
                        payment_method: {
                            card: card,
                            billing_details: {
                                name: '@Model.UserModel.FirstName @Model.UserModel.LastName'
                            }
                        }
                    }).then(function (result) {
                        if (result.error) {
                            $("#purchaseTicketsModal .alert, #paymentSuccessAlert2").css("display", "none"); //hide other messages
                            $("#paymentFailedAlert span").html(result.error.message);
                            $("#paymentFailedAlert").css("display", "block");
                            $("#buyTickets").removeAttr("disabled");
                            $("#PageLoadingModal").css("display", "none");
                        }
                        else { //check until we get a verdict
                            var intervalId = setInterval(function () {
                                $.ajax({
                                    url: "/api/wallets/checkpayment/" + encodeURI(result.paymentIntent.id),
                                    method: "GET",
                                    beforeSend: function (xhr) {
                                        var token = getCookie("BearerToken");
                                        if(token != "")
                                            xhr.setRequestHeader("Authorization", "Bearer " + token);
                                    },
                                    success: function (data) {
                                        if (data.result == "Failure") {
                                            $("#purchaseTicketsModal .alert, #paymentSuccessAlert2").css("display", "none"); //hide other messages
                                            $("#paymentFailedAlert span").html(result.error.message);
                                            $("#paymentFailedAlert").css("display", "block");
                                            clearInterval(intervalId); //stop checking
                                            $("#buyTickets").removeAttr("disabled");
                                            $("#PageLoadingModal").css("display", "none");
                                        }
                                        else if (data.result == "Success") {
                                            // The payment has been processed!
                                            if (result.paymentIntent.status === 'succeeded') {
                                                $("#purchaseTicketsModal .alert").css("display", "none"); //hide other messages
                                                $("#paymentSucceedAlert, #paymentSuccessAlert2").css("display", "block");
                                                elements.getElement("card").clear();
                                                clearInterval(intervalId);
                                                $("#buyTickets").removeAttr("disabled");
                                                $("#PageLoadingModal").css("display", "none");
                                                $("#purchaseTicketsButton div").html("<span>"+data.numTickets+"</span> Tickets")
                                            }
                                        }
                                    }
                                });
                            }, 2000); //every 2 seconds, see if transaction succeeded
                        }
                    });
                },
                error: function (XMLHttpRequest, textStatus, errorThrown) {
                    $("#purchaseTicketsModal .alert, #paymentSuccessAlert2").css("display", "none"); //hide other messages
                    $("#paymentFailedAlert span").html(XMLHttpRequest.responseText);
                    $("#paymentFailedAlert").css("display", "block");
                    $("#buyTickets").removeAttr("disabled");
                    $("#PageLoadingModal").css("display", "none");
                }
            });

        });



    });

    $("#numTickets").on('input', function () { //update ticket cost/number with slider
        $("#buyTickets span").html((@Model.AuctionModel.TicketCost * $("#numTickets").val()).toFixed(2));
        $("#numTicketLabel span").html($("#numTickets").val());
    });

    function viewBasket(id) {
        if (currentSelectedBasketId == id) { //no ajax if it's already loaded
            $("#basketDataModal").modal("toggle");
            return;
        }

        $("#currentBasketAddTicket").data("id", id); //add id to button data
        $("#currentBasketAddTicket").click(function () { addTicket($(this).data("id")); })

        var data = null;
        baskets.forEach(function (basket) { //get target basket from internal data store;
            if (basket["basketId"] == id)
                data = basket;
        });

        if (data == null)
            return;

        $("#currentBasketGallery").html();
        Galleria.run('#currentBasketGallery');

        var galleriaData = [];
        data["photos"].forEach(function (element) {
            galleriaData.push({ image: element["url"] });
        });
        $("#currentBasketGallery").data("galleria")._options.imageCrop = false; //the main gallery shouldn't crop
        $("#currentBasketGallery").data("galleria").load(galleriaData); //load in images
        $("#currentBasketDescription").html(data["basketDescription"]);
        $("#currentBasketTitle, #modalHeader").html(data["basketTitle"]);
        $("#currentBasketAddTicket span").html(data["numTickets"]);
        var contentHtml = "";
        data["basketContents"].forEach(function (element) {
            contentHtml += "<tr style='flex-basis: 50%; display:flex; justify-content:center' class='table-light'>"; //build list
            contentHtml += "<td style='padding: unset;'>" + element + "</td>";
            contentHtml += "</tr>";
        });
        $("#currentBasketContents tbody").html(contentHtml);
        $("#basketDataModal").modal("toggle");
        currentSelectedBasketId = id;
    }

    function addTicket(basketId) {
        $.ajax({
            url: "/api/baskets/" + basketId + "/ticket/add",
            method: "POST",
            beforeSend: function (xhr) {
                var token = getCookie("BearerToken");
                if (token != "")
                    xhr.setRequestHeader("Authorization", "Bearer " + token);
            },
            success: function (data) {
                $("#currentBasketAddTicket span").html(data); //update modal ticket counter
                $(".basketCard[data-id=" + basketId + "]").find("h3 span").html(data); //update ticket count on basket card
                var numTickets = parseInt($("#purchaseTicketsButton span").html());
                if (numTickets - 1 > 0)
                    $("#purchaseTicketsButton span").html(numTickets - 1); //add to purchase button
                else
                    $("#purchaseTicketsButton div").html("Purchase Tickets");
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                $("#currentBasketAddTicket").html("Error: " + XMLHttpRequest.responseText).removeClass("btn-success").addClass("btn-danger");
                $(".basketCard[data-id=" + basketId + "] .addTicket").html(XMLHttpRequest.responseText).removeClass("btn-outline-secondary").addClass("btn-danger"); //update ticket count on basket card
            }
        });
    }

    </script>
